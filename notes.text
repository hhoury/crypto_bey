{
  "username": "hsn",
  "first_name": "hsn",
  "last_name": "hsn",
  "phone_number": "123456789",
  "is_agent": false,
  "email": "hhoury@hotmail.com",
  "password": "Hassan@123"
}


1- users
2- addresses
3- 


sso.cryptobey.net
admin
4BJM4sAHW8XB5ZMG


access:

eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJ2MUU2Q19EVTJWa3RNcHJRZk1YaGo4ZFV5Q3AxY2RlRklaRUdNbmw0cWxVIn0.eyJleHAiOjE2NTI0NzAzNTQsImlhdCI6MTY1MjQ3MDI5NCwianRpIjoiMDY3MDUwMTktNTY0OS00MjM3LWFjOTYtMGQ1ZjgyYzcxYzQyIiwiaXNzIjoiaHR0cDovL2tleWNsb2FrLTA6ODA4MC9hdXRoL3JlYWxtcy9tYXN0ZXIiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiYjFjNDcxZmItMjExZS00ZjIxLWI3NWYtNDM4ZGM1Mjg0NzRlIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoiZmFzdGFwaSIsInNlc3Npb25fc3RhdGUiOiJiMGExYmI4Ny04NzE3LTQ5N2ItOTMyYS1mYTA2MmM5MzNmMjMiLCJhY3IiOiIxIiwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbImRlZmF1bHQtcm9sZXMtbWFzdGVyIiwib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsInNpZCI6ImIwYTFiYjg3LTg3MTctNDk3Yi05MzJhLWZhMDYyYzkzM2YyMyIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwibmFtZSI6IkhoIEhoIiwicHJlZmVycmVkX3VzZXJuYW1lIjoiaGhvdXJ5QGhvdG1haWwuY29tIiwiZ2l2ZW5fbmFtZSI6IkhoIiwiZmFtaWx5X25hbWUiOiJIaCIsImVtYWlsIjoiaGhvdXJ5QGhvdG1haWwuY29


refresh:
eyJhbGciOiJIUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJlMGFkZTcxYS05MzY1LTRjNmUtODZmNS1hMTI1ZGU2ZDlkMmMifQ.eyJleHAiOjE2NTI0NzIwOTQsImlhdCI6MTY1MjQ3MDI5NCwianRpIjoiMGExZmI1MTYtOWM3YS00ZjhhLWJlNmQtY2VjYzgzYWNmMWMyIiwiaXNzIjoiaHR0cDovL2tleWNsb2FrLTA6ODA4MC9hdXRoL3JlYWxtcy9tYXN0ZXIiLCJhdWQiOiJodHRwOi8va2V5Y2xvYWstMDo4MDgwL2F1dGgvcmVhbG1zL21hc3RlciIsInN1YiI6ImIxYzQ3MWZiLTIxMWUtNGYyMS1iNzVmLTQzOGRjNTI4NDc0ZSIsInR5cCI6IlJlZnJlc2giLCJhenAiOiJmYXN0YXBpIiwic2Vzc2lvbl9zdGF0ZSI6ImIwYTFiYjg3LTg3MTctNDk3Yi05MzJhLWZhMDYyYzkzM2YyMyIsInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsInNpZCI6ImIwYTFiYjg3LTg3MTctNDk3Yi05MzJhLWZhMDYyYzkzM2YyMyJ9.HzvPN7C-iza39-fQO1RZDbCgNIF-SIkLMe6OwPFa9vo




 var userBox = await Hive.openBox('userBox');
      final userData = json.encode({
        'accessToken': _accessToken,
        'refreshToken': _refreshToken,
      });
      userBox.put('userData', userData);

      // await userBox.clear();
    if (!userBox.containsKey('userData')) {
      return false;
    } else {
      final userData = json.decode(userBox.get('userData', defaultValue: ''));
      if (userData.toString().isEmpty) {
        return false;
      } else {
        _refreshToken = userData['refreshToken'] ?? '';
        _accessToken = userData['accessToken'] ?? '';
        notifyListeners();
        return true;
      }
    }